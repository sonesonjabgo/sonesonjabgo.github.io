{"version":3,"file":"component---src-templates-blog-template-js-f5f8f6c6e5a1b0c7d7d5.js","mappings":"6MA4BA,MAxBA,SAAmBA,GAAY,IAAX,KAAEC,GAAMD,EAC1B,OACEE,EAAAA,cAAA,UAAQC,UAAU,eACfF,EAAKG,OAASF,EAAAA,cAAA,OAAKC,UAAU,SAASF,EAAKG,OAC5CF,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,cACZF,EAAKI,WAAWC,KAAKC,GACpBL,EAAAA,cAACM,EAAAA,KAAI,CAACL,UAAU,WAAWM,IAAKF,EAAUG,GAAI,UAAUH,KACrDA,OAMTL,EAAAA,cAAA,MAAIC,UAAU,SAASF,EAAKU,OAC5BT,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,UAAS,aACZD,EAAAA,cAAA,cAASD,EAAKW,QAAiB,KACpC,IACNX,EAAKY,MAId,ECAA,MAvBA,SAAsBb,GAA0B,IAAzB,SAAEc,EAAQ,SAAEC,GAAUf,EAC3C,OACEE,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,OAAKC,UAAU,+BACZY,GACCb,EAAAA,cAACM,EAAAA,KAAI,CAACL,UAAU,iBAAiBM,IAAKM,EAASC,GAAIN,GAAIK,EAASE,MAC9Df,EAAAA,cAAA,OAAKC,UAAU,aAAY,QAC3BD,EAAAA,cAAA,OAAKC,UAAU,SAASY,EAASJ,SAIvCT,EAAAA,cAAA,OAAKC,UAAU,+BACZW,GACCZ,EAAAA,cAACM,EAAAA,KAAI,CAACL,UAAU,iBAAiBM,IAAKK,EAASE,GAAIN,GAAII,EAASG,MAC9Df,EAAAA,cAAA,OAAKC,UAAU,aAAY,QAC3BD,EAAAA,cAAA,OAAKC,UAAU,SAASW,EAASH,SAM7C,E,UCdA,MARA,SAAoBX,GAAY,IAAX,KAAEkB,GAAMlB,EAC3B,OACEE,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,OAAKC,UAAU,WAAWgB,wBAAyB,CAAEC,OAAQF,KAGnE,E,UCNA,MAAMG,EAAM,sBAGNC,EAAWA,KAAMC,EAAAA,EAAAA,GAAyB,cAAgB,cAAgB,eAE1EC,EAAsBA,KAAO,IAADC,EAChC,MAAMC,EAA6C,QAAnCD,EAAGE,SAASC,cAAc,iBAAS,IAAAH,OAAA,EAAhCA,EAAkCI,cACrDH,SAAAA,EAAYI,YAAY,CACtBC,KAAM,YACNC,MAAOV,KACND,EAAI,EAiCT,MA9BA,SAAmBrB,GAAkB,IAAjB,KAAEiC,EAAI,KAAEC,GAAMlC,EAChC,MAAMmC,GAAUC,EAAAA,EAAAA,aACVC,GAAqBC,EAAAA,EAAAA,SAAO,GAyBlC,OAvBAC,EAAAA,EAAAA,YAAU,KACR,IAAKJ,EAAQK,SAAWH,EAAmBG,QAAS,OAEpD,MAAMd,EAAaC,SAASc,cAAc,UACpCC,EAAmB,CACvBC,IAAK,GAAGtB,cACRY,OACAW,OAvBS,SAwBTZ,MAAOV,IACPuB,MAAO,UACPC,OAAO,EACP,aAAc,WACdC,YAAa,aAGfC,OAAOC,KAAKP,GAAkBQ,SAASC,IACrCzB,EAAW0B,aAAaD,EAAWT,EAAiBS,GAAW,IAEjEhB,EAAQK,QAAQa,YAAY3B,GAC5B4B,OAAOC,iBAAiB,QAAS/B,GACjCa,EAAmBG,SAAU,CAAI,GAChC,CAACP,EAAME,EAASD,IAEZhC,EAAAA,cAAA,OAAKC,UAAU,aAAaqD,IAAKrB,GAC1C,EChBA,MAlBA,SAAqBnC,GAAY,IAADyD,EAAAC,EAAA,IAAV,KAAEC,GAAM3D,EAC5B,MAAM4D,EAAU,IAAIC,EAAAA,EAAKF,EAAKG,KACxBhD,EAAW6C,EAAKI,MAAQ,IAAIF,EAAAA,EAAKF,EAAKI,MACtChD,EAAW4C,EAAKK,MAAQ,IAAIH,EAAAA,EAAKF,EAAKK,OACtC,SAAEC,GAAsB,QAAZR,EAAGE,EAAKO,YAAI,IAAAT,OAAA,EAATA,EAAWU,aAC1BC,EAAiBH,SAAoB,QAAZP,EAARO,EAAUvC,kBAAU,IAAAgC,OAAZ,EAARA,EAAsBzB,KAE7C,OACE/B,EAAAA,cAACmE,EAAAA,EAAM,KACLnE,EAAAA,cAACoE,EAAAA,EAAG,CAAC3D,MAAOiD,aAAO,EAAPA,EAASjD,MAAO4D,YAAaX,aAAO,EAAPA,EAASY,UAClDtE,EAAAA,cAACuE,EAAU,CAACxE,KAAM2D,IAClB1D,EAAAA,cAACwE,EAAW,CAACxD,KAAM0C,EAAQ1C,OAC3BhB,EAAAA,cAACyE,EAAa,CAAC7D,SAAUA,EAAUC,SAAUA,IAC5CqD,GAAkBlE,EAAAA,cAAC0E,EAAU,CAAC3C,KAAMmC,EAAgBlC,KAAM0B,EAAQ3C,OAGzE,C","sources":["webpack://zoomkoding.com/./src/components/post-header/index.js","webpack://zoomkoding.com/./src/components/post-navigator/index.js","webpack://zoomkoding.com/./src/components/post-content/index.js","webpack://zoomkoding.com/./src/components/utterances/index.js","webpack://zoomkoding.com/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport './style.scss';\r\n\r\nfunction PostHeader({ post }) {\r\n  return (\r\n    <header className=\"post-header\">\r\n      {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\r\n      <div className=\"info\">\r\n        <div className=\"categories\">\r\n          {post.categories.map((category) => (\r\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\r\n              {category}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <h1 className=\"title\">{post.title}</h1>\r\n      <div className=\"info\">\r\n        <div className=\"author\">\r\n          posted by <strong>{post.author}</strong>,\r\n        </div>{' '}\r\n        {post.date}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default PostHeader;\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport './style.scss';\r\n\r\nfunction PostNavigator({ prevPost, nextPost }) {\r\n  return (\r\n    <div className=\"post-navigator\">\r\n      <div className=\"post-navigator-card-wrapper\">\r\n        {nextPost && (\r\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\r\n            <div className=\"direction\">이전 글</div>\r\n            <div className=\"title\">{nextPost.title}</div>\r\n          </Link>\r\n        )}\r\n      </div>\r\n      <div className=\"post-navigator-card-wrapper\">\r\n        {prevPost && (\r\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\r\n            <div className=\"direction\">다음 글</div>\r\n            <div className=\"title\">{prevPost.title}</div>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostNavigator;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nfunction PostContent({ html }) {\r\n  return (\r\n    <div className=\"post-content\">\r\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostContent;\r\n","import React, { createRef, useEffect, useRef } from 'react';\r\nimport { getValueFromLocalStorage } from '../../utils/localStorage';\r\n\r\nconst url = 'https://utteranc.es';\r\nconst branch = 'master';\r\n\r\nconst getTheme = () => getValueFromLocalStorage('isDarkMode') ? 'photon-dark' : 'github-light'\r\n\r\nconst resetChangeListener = () => {\r\n  const utterances = document.querySelector('iframe')?.contentWindow;\r\n  utterances?.postMessage({\r\n    type: 'set-theme',\r\n    theme: getTheme()\r\n  }, url);\r\n}\r\n\r\nfunction Utterances({ repo, path }) {\r\n  const rootElm = createRef();\r\n  const isUtterancesLoaded = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!rootElm.current || isUtterancesLoaded.current) return;\r\n\r\n    const utterances = document.createElement('script');\r\n    const utterancesConfig = {\r\n      src: `${url}/client.js`,\r\n      repo,\r\n      branch,\r\n      theme: getTheme(),\r\n      label: 'comment',\r\n      async: true,\r\n      'issue-term': 'pathname',\r\n      crossorigin: 'anonymous',\r\n    };\r\n\r\n    Object.keys(utterancesConfig).forEach((configKey) => {\r\n      utterances.setAttribute(configKey, utterancesConfig[configKey]);\r\n    });\r\n    rootElm.current.appendChild(utterances);\r\n    window.addEventListener('theme', resetChangeListener)\r\n    isUtterancesLoaded.current = true;\r\n  }, [repo, rootElm, path]);\r\n\r\n  return <div className=\"utterances\" ref={rootElm} />;\r\n}\r\n\r\nexport default Utterances;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../layout';\r\nimport Seo from '../components/seo';\r\nimport PostHeader from '../components/post-header';\r\nimport PostNavigator from '../components/post-navigator';\r\nimport Post from '../models/post';\r\nimport PostContent from '../components/post-content';\r\nimport Utterances from '../components/utterances';\r\n\r\nfunction BlogTemplate({ data }) {\r\n  const curPost = new Post(data.cur);\r\n  const prevPost = data.prev && new Post(data.prev);\r\n  const nextPost = data.next && new Post(data.next);\r\n  const { comments } = data.site?.siteMetadata;\r\n  const utterancesRepo = comments?.utterances?.repo;\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\r\n      <PostHeader post={curPost} />\r\n      <PostContent html={curPost.html} />\r\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\r\n      {utterancesRepo && <Utterances repo={utterancesRepo} path={curPost.slug} />}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default BlogTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\r\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      excerpt(pruneLength: 500, truncate: true)\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        categories\r\n        author\r\n        emoji\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        categories\r\n        author\r\n        emoji\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        categories\r\n        author\r\n        emoji\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        siteUrl\r\n        comments {\r\n          utterances {\r\n            repo\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","post","React","className","emoji","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","url","getTheme","getValueFromLocalStorage","resetChangeListener","_document$querySelect","utterances","document","querySelector","contentWindow","postMessage","type","theme","repo","path","rootElm","createRef","isUtterancesLoaded","useRef","useEffect","current","createElement","utterancesConfig","src","branch","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","appendChild","window","addEventListener","ref","_data$site","_comments$utterances","data","curPost","Post","cur","prev","next","comments","site","siteMetadata","utterancesRepo","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Utterances"],"sourceRoot":""}