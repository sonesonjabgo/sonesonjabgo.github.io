{"componentChunkName":"component---src-templates-blog-template-js","path":"/react-rulesOfHooks/","result":{"data":{"cur":{"id":"830c947e-a289-5690-a98a-cb96e720d72c","html":"<h2 id=\"rules-of-hooks\" style=\"position:relative;\"><a href=\"#rules-of-hooks\" aria-label=\"rules of hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rules of Hooks</h2>\n<ul>\n<li>React Hook을 사용할 때 따라야 할 몇 가지 중요한 규칙</li>\n<li>이 규칙들은 Hook이 일관되게 동작하도록 하기 위함이다.</li>\n</ul>\n<h2 id=\"최상위에서만-hook-호출하기\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%83%81%EC%9C%84%EC%97%90%EC%84%9C%EB%A7%8C-hook-%ED%98%B8%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"최상위에서만 hook 호출하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최상위에서만 Hook 호출하기</h2>\n<ul>\n<li>Hook은 함수 컴포넌트의 최상위 수준에서만 호출해야 한다.</li>\n<li>조건문, 반복문, 중첩된 함수 내에서 Hook 호출해서는 안됨.</li>\n<li>이렇게 해야 동일한 순서로 호출되는 것을 보장 할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 올바른 사용법</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token comment\">// ...</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 잘못된 사용법</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 조건문 내에서 Hook 호출</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token comment\">// ...</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"react-함수-컴포넌트-또는-커스텀-hook-안에서만-hook-호출하기\" style=\"position:relative;\"><a href=\"#react-%ED%95%A8%EC%88%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%98%90%EB%8A%94-%EC%BB%A4%EC%8A%A4%ED%85%80-hook-%EC%95%88%EC%97%90%EC%84%9C%EB%A7%8C-hook-%ED%98%B8%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"react 함수 컴포넌트 또는 커스텀 hook 안에서만 hook 호출하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 함수 컴포넌트 또는 커스텀 Hook 안에서만 Hook 호출하기</h2>\n<ul>\n<li>일반 자바스크립트 함수나 클래스 컴포넌트에서 Hook을 호출하면 안됨.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 올바른 사용법</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token comment\">// ...</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">useCustomHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'initial'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token comment\">// ...</span>\r\n  <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 잘못된 사용법</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">notAComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 일반 함수에서 Hook 호출</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"Rules of Hooks React Hook을 사용할 때 따라야 할 몇 가지 중요한 규칙 이 규칙들은 Hook이 일관되게 동작하도록 하기 위함이다. 최상위에서만 Hook 호출하기 Hook은 함수 컴포넌트의 최상위 수준에서만 호출해야 한다. 조건문, 반복문, 중첩된 함수 내에서 Hook 호출해서는 안됨. 이렇게 해야 동일한 순서로 호출되는 것을 보장 할 수 있다. React 함수 컴포넌트 또는 커스텀 Hook 안에서만 Hook 호출하기 일반 자바스크립트 함수나 클래스 컴포넌트에서 Hook을 호출하면 안됨.","frontmatter":{"date":"July 12, 2024","title":"리액트 Rules of Hooks","categories":"React","author":"손재형","emoji":"⚛️"},"fields":{"slug":"/react-rulesOfHooks/"}},"next":{"id":"e1b6bd47-2190-53be-9324-94fbec4a31c1","html":"<h2 id=\"env-파일\" style=\"position:relative;\"><a href=\"#env-%ED%8C%8C%EC%9D%BC\" aria-label=\"env 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>env 파일</h2>\n<ul>\n<li>요청 보낼 주소나 api key 같은 드러나지 않았으면 하는 값들을 env 파일에 넣어서 관리한다</li>\n</ul>\n<h2 id=\"글을-쓰게-된-이유\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EC%9D%84-%EC%93%B0%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"글을 쓰게 된 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글을 쓰게 된 이유</h2>\n<ul>\n<li>api key를 env 파일에 넣어서 쓰고 있었는데 불러보니 undefined였다.</li>\n<li>어이가 없는 건 이 문제를 발견하게 되기 전 까지 다른 곳에서 잘 불러서 쓰고 있었다.</li>\n</ul>\n<h2 id=\"찾아낸-사실\" style=\"position:relative;\"><a href=\"#%EC%B0%BE%EC%95%84%EB%82%B8-%EC%82%AC%EC%8B%A4\" aria-label=\"찾아낸 사실 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>찾아낸 사실</h2>\n<ul>\n<li>next env 파일에 변수 이름 앞에 NEXT<em>PUBLIC</em>를 붙여줘야 인식한다.</li>\n</ul>\n<blockquote>\n<p>나는 ssr에서 불러서 쓸 때는 문제가 없었지만 csr에서 부르니 안됐다.</p>\n<blockquote>\n<p>아마 인식 문제는 csr에서만 적용되는 듯 하다.</p>\n</blockquote>\n</blockquote>","frontmatter":{"date":"July 12, 2024","title":"next.js env","categories":"Next","author":"손재형","emoji":null},"fields":{"slug":"/next-env/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://sonesonjabgo.github.io","comments":{"utterances":{"repo":"sonesonjabgo/sonesonjabgo.github.io"}}}}},"pageContext":{"slug":"/react-rulesOfHooks/","nextSlug":"/next-env/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}