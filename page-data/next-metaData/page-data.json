{"componentChunkName":"component---src-templates-blog-template-js","path":"/next-metaData/","result":{"data":{"cur":{"id":"a718f923-367f-5047-abdf-4ca8289ee373","html":"<h2 id=\"meta-data\" style=\"position:relative;\"><a href=\"#meta-data\" aria-label=\"meta data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meta data</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> metadata<span class=\"token operator\">:</span> Metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    template<span class=\"token operator\">:</span> <span class=\"token string\">'%s | Next Movies'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'Next Movies'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  description<span class=\"token operator\">:</span> <span class=\"token string\">'The best movie on the best framework'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>메타데이터를 사용하여 head에 표시될 정보를 간편하게 바꿀 수 있다.</p>\n</li>\n<li>\n<p>next js는 메타데이터의 타입도 제공함</p>\n<ul>\n<li>규칙에 맞춰 넣으면 된다</li>\n</ul>\n</li>\n<li>\n<p>메타데이터는 layout.tsx와 page.tsx에만 작성 가능하다.</p>\n</li>\n<li>\n<p>client component에서는 메타데이터 export 불가능하다.</p>\n</li>\n<li>\n<p>공식 문서 : <a href=\"https://nextjs.org/docs/app/building-your-application/optimizing/metadata\">https://nextjs.org/docs/app/building-your-application/optimizing/metadata</a></p>\n</li>\n</ul>","excerpt":"meta data 메타데이터를 사용하여 head에 표시될 정보를 간편하게 바꿀 수 있다. next js는 메타데이터의 타입도 제공함 규칙에 맞춰 넣으면 된다 메타데이터는 layout.tsx와 page.tsx에만 작성 가능하다. client component에서는 메타데이터 export 불가능하다. 공식 문서 : https://nextjs.org/docs/app/building-your-application/optimizing/metadata","frontmatter":{"date":"July 15, 2024","title":"next.js 메타 데이터","categories":"Next","author":"손재형","emoji":null},"fields":{"slug":"/next-metaData/"}},"next":{"id":"ee4a0e5c-b397-577c-b42e-0e76be9023df","html":"<h2 id=\"하이드레이션hydration이란\" style=\"position:relative;\"><a href=\"#%ED%95%98%EC%9D%B4%EB%93%9C%EB%A0%88%EC%9D%B4%EC%85%98hydration%EC%9D%B4%EB%9E%80\" aria-label=\"하이드레이션hydration이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하이드레이션(Hydration)이란?</h2>\n<ul>\n<li>서버사이드 렌더링(SSR)을 통해 만들어 진 인터랙티브 하지 않는 HTML을 클라이언트 측 자바스크립트를 사용하여 인터랙티브한 리액트 컴포넌트로 변환하는 과정을 말한다.\r\n(서버 환경에서 이미 렌더링된 HTML에 React를 붙이는 것)</li>\n</ul>\n<h2 id=\"in-nextjs\" style=\"position:relative;\"><a href=\"#in-nextjs\" aria-label=\"in nextjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>in Next.JS</h2>\n<ul>\n<li>\n<p>next js는 기본적으로 SSR 방식으로 랜더링 한다.</p>\n</li>\n<li>\n<p>여기서 hydration이 적용이 되는데</p>\n</li>\n<li>\n<p>초기 Html 파일을 먼저 전달하고 이후 HTML 요소들을 React 컴포넌트로 변환 및 이벤트리스너를 부착하여 React DOM에서 관리하게 한다.</p>\n</li>\n<li>\n<p>이 과정을 Hydration(수분 보충)이라고 한다.</p>\n</li>\n</ul>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>next js가 정적인 html을 먼저 띄우고</li>\n<li>그 뒤에 hydration이 이루어짐</li>\n<li>이 과정 덕에 SPA의 단점인 초기 랜더링 시 오래 걸리는 문제를 해결함\n<ul>\n<li>자바스크립트가 랜더링 하는 것을 기다리지 않기 때문</li>\n</ul>\n</li>\n<li>hydration은 단순 HTML을 React application으로 초기화 하는 작업</li>\n</ul>\n<h2 id=\"a-vs-link\" style=\"position:relative;\"><a href=\"#a-vs-link\" aria-label=\"a vs link permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a> vs <Link></h2>\n<ul>\n<li>next js를 사용하면서 페이지를 이동할 때 Link 태그를 사용하도록 권장한다.\n<ul>\n<li>Link 태그가 프레임워크의 네비게이션이기 때문</li>\n<li>a 태그는 브라우저 네비게이션</li>\n</ul>\n</li>\n<li>a 태그를 사용하면 페이지 전체를 새로 불러와서 기능 저하를 일으킨다.</li>\n<li>Link 태그는 브라우저 주소만 바꾸고 페이지 새로 불러오지는 않음.</li>\n<li>따라서 SPA인 리액트는 Link 사용을 권장함</li>\n<li>하이드레이션이 되기 전 정적 html에서 link 태그는 a 태그와 같이 취급된다.</li>\n</ul>\n<h2 id=\"use-client\" style=\"position:relative;\"><a href=\"#use-client\" aria-label=\"use client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>use client</h2>\n<ul>\n<li>CSR을 사용할 컴포넌트 상단에 적어줘야 하는 문구이다.</li>\n<li>이는 단순히 클라이언트에서 렌더 된다는 의미가 아님.</li>\n<li>서버에서 정적인 html을 렌더하고 클라이언트에서 hydrate 하겠다는 의미.\n<ul>\n<li>이 과정으로 컴포넌트는 interactive 해짐</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"July 15, 2024","title":"next.js hydration","categories":"Next","author":"손재형","emoji":null},"fields":{"slug":"/next-hydration/"}},"prev":{"id":"df71dc4b-c17b-5d0e-b593-7fa26d07be95","html":"<h2 id=\"기존의-방법-리액트\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4%EC%9D%98-%EB%B0%A9%EB%B2%95-%EB%A6%AC%EC%95%A1%ED%8A%B8\" aria-label=\"기존의 방법 리액트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존의 방법 (리액트)</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token string\">'use client'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoading<span class=\"token punctuation\">,</span> setIsLoading<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>movies<span class=\"token punctuation\">,</span> setMovies<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getMovies</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://nomad-movies.nomadcoders.workers.dev/movies'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">setMovies</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">getMovies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>isLoading <span class=\"token operator\">?</span> <span class=\"token string\">'Loading...'</span> <span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>movies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"next-js에서의-방식\" style=\"position:relative;\"><a href=\"#next-js%EC%97%90%EC%84%9C%EC%9D%98-%EB%B0%A9%EC%8B%9D\" aria-label=\"next js에서의 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>next js에서의 방식</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'Home'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://nomad-movies.nomadcoders.workers.dev/movies'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getMovies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">HomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> movies <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getMovies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>movies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>바뀐 방식은 리액트 훅을 사용하지 않아도 됨</p>\n</li>\n<li>\n<p>next js는 프레임워크로써 fetch한 데이터를 프레임워크에서 저장한 후</p>\n</li>\n<li>\n<p>클라이언트에 캐싱하는 방식을 사용한다.</p>\n</li>\n<li>\n<p>때문에 위의 코드는 서버에서 실행되어 클라이언트에 보여지는 것</p>\n</li>\n<li>\n<p>next js 프레임워크가 한 번 실행된 fetch는 메모리에 캐싱해둠</p>\n<ul>\n<li>때문에 같은 페이지를 다시 접속할 때 불필요한 fetch를 줄이고</li>\n<li>페이지를 빠르게 보여주게 한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"July 16, 2024","title":"next.js 데이터 페칭","categories":"Next","author":"손재형","emoji":null},"fields":{"slug":"/next-DataFetching/"}},"site":{"siteMetadata":{"siteUrl":"https://sonesonjabgo.github.io","comments":{"utterances":{"repo":"sonesonjabgo/sonesonjabgo.github.io"}}}}},"pageContext":{"slug":"/next-metaData/","nextSlug":"/next-hydration/","prevSlug":"/next-DataFetching/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}