{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Next","result":{"pageContext":{"currentCategory":"Next","categories":["All","React","Next","Angular","test"],"edges":[{"node":{"id":"e1b6bd47-2190-53be-9324-94fbec4a31c1","excerpt":"env 파일 요청 보낼 주소나 api key 같은 드러나지 않았으면 하는 값들을 env 파일에 넣어서 관리한다 글을 쓰게 된 이유 api key를 env 파일에 넣어서 쓰고 있었는데 불러보니 undefined였다. 어이가 없는 건 이 문제를 발견하게 되기 전 까지 다른 곳에서 잘 불러서 쓰고 있었다. 찾아낸 사실 next env 파일에 변수 이름 앞에 NEXTPUBLIC를 붙여줘야 인식한다. 나는 ssr에서 불러서 쓸 때는 문제가 없었지만 csr에서 부르니 안됐다. 아마 인식 문제는 csr에서만 적용되는 듯 하다.","fields":{"slug":"/next-env/"},"frontmatter":{"categories":"Next","title":"next.js env","date":"July 12, 2024"}},"next":{"fields":{"slug":"/react-contextApi/"}},"previous":{"fields":{"slug":"/react-rulesOfHooks/"}}},{"node":{"id":"647668d9-26b8-53d8-aa79-34031f4180c0","excerpt":"next.js의 app router 방식에 대해 알아보자. next js 13 버전부터 도입된 방식 알아두면 좋은 점: 앱 라우터는 페이지 라우터보다 우선순위가 높습니다. 디렉터리 간 경로는 동일한 URL 경로로 확인되어서는 안 되며 충돌을 방지하기 위해 빌드 시간 오류가 발생합니다. 프로젝트 구조 최상위 폴더\r\n 폴더 설명 app 앱 라우터 page 페이지 라우터 public 정적 에셋 src 일반적인 패턴을 위한 폴더 src 프로젝트 루트에 특별한 Next.js 앱이나 페이지 디렉터리를 두는 대신 Next.js는 src 디렉터리 아래에 애플리케이션 코드를 배치하는 일반적인 패턴도 지원합니다. 이는 대부분 개인과 팀이 선호하는 프로젝트 루트에 있는 프로젝트 구성 파일과 애플리케이션 코드를 분리합니다. src 디렉터리를 사용하려면 앱 라우터 폴더나 페이지 라우터 폴더를 각각 src/app 또는 src/pages로 이동하세요.  라우팅 기본 사항  Tree: 계층 구조를 시각화하기 …","fields":{"slug":"/next-appRouter/"},"frontmatter":{"categories":"Next","title":"next.js app router","date":"July 05, 2024"}},"next":{"fields":{"slug":"/next-chatting/"}},"previous":{"fields":{"slug":"/react-contextApi/"}}},{"node":{"id":"13d44c07-cfa8-532a-91c5-5e5129d1f7c9","excerpt":"Next.js에서 채팅 구현 소켓 통신에 대해 알기 socket.io 작동 방식 next.js api route 세팅 next 14 app router 프로젝트 tailwind 사용 서버 프레임워크 사용 대신 next api route 사용 회고 일단 app router 방식의 api routes는 socket io 연동이 불가능했다. socket io 사용을 하기 위해 next의 서버에 연결을 해야 했는데 app router는 서버 인스턴스가 제공되지 않았음. 전체 프로젝트는 app router, 채팅 부분만 page로 빼내어 사용 socket.io에 대한 이해 부족 채팅 서비스 구현에 집중해서 socket.io 자체에 대한 학습이 부족했음 때문에 공식문서에 나와있는 next.js 활용 예시와 블로그 글들을 많이 검색했음 공식문서에서는 루트에 server.js를 추가하여 커스텀 서버를 만들라고 함 블로그 예제는 handler의 res를 통해 서버 인스턴스 접근으로 구현 나는 후자…","fields":{"slug":"/next-chatting/"},"frontmatter":{"categories":"Next","title":"next.js 채팅 구현","date":"July 04, 2024"}},"next":{"fields":{"slug":"/next-folder-tips/"}},"previous":{"fields":{"slug":"/next-appRouter/"}}},{"node":{"id":"f1d824ce-0f01-5e8d-8319-44fc929cb3ca","excerpt":"Next app router app router 방식은 폴더 네이밍대로 routing이 생긴다. 이게 아주 편리하지만 … 폴더가 많으면 너무 복잡해진다  위와 같이 폴더를 구성하고 components 안에 pages.tsx를 작성하면 (주소)/components 라는 경로의 페이지가 만들어져 버린다 위 같은 문제를 방지하기 위해 next는 폴더 규칙이 있다. Route group route가 될 수 있는 페이지들을 하나의 그룹으로 묶을 수 있게 해줌 규칙은 (name)\r\n Private folder page.tsx를 만들더라도 route를 생성하지 않게 하려면 폴더 앞에 _ 를 붙이면 된다.\r\n Next에서 API KEY 숨기기 API KEY나 환경 변수 같은 것 들은 .env 파일에 저장한다. root에 .env 파일을 만들고 변수 작성하면 됨. 불러올 때 process.env.변수이름 으로 불러오면 된다.","fields":{"slug":"/next-folder-tips/"},"frontmatter":{"categories":"Next","title":"next.js 폴더 구조 + 팁","date":"July 04, 2024"}},"next":{"fields":{"slug":"/next-hydration/"}},"previous":{"fields":{"slug":"/next-chatting/"}}},{"node":{"id":"ee4a0e5c-b397-577c-b42e-0e76be9023df","excerpt":"하이드레이션(Hydration)이란? 서버사이드 렌더링(SSR)을 통해 만들어 진 인터랙티브 하지 않는 HTML을 클라이언트 측 자바스크립트를 사용하여 인터랙티브한 리액트 컴포넌트로 변환하는 과정을 말한다.\r\n(서버 환경에서 이미 렌더링된 HTML에 React를 붙이는 것) in Next.JS next js는 기본적으로 SSR 방식으로 랜더링 한다. 여기서 hydration이 적용이 되는데 초기 Html 파일을 먼저 전달하고 이후 HTML 요소들을 React 컴포넌트로 변환 및 이벤트리스너를 부착하여 React DOM에서 관리하게 한다. 이 과정을 Hydration(수분 보충)이라고 한다. 정리 next js가 정적인 html을 먼저 띄우고 그 뒤에 hydration이 이루어짐 이 과정 덕에 SPA의 단점인 초기 랜더링 시 오래 걸리는 문제를 해결함 자바스크립트가 랜더링 하는 것을 기다리지 않기 때문  vs  next js를 사용하면서 페이지를 이동할 때 Link 태그를 사용하도록…","fields":{"slug":"/next-hydration/"},"frontmatter":{"categories":"Next","title":"next.js hydration","date":"July 04, 2024"}},"next":{"fields":{"slug":"/react-mapKeyIndex/"}},"previous":{"fields":{"slug":"/next-folder-tips/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}