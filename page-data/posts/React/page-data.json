{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/React","result":{"pageContext":{"currentCategory":"React","categories":["All","Next","React","Angular","test"],"edges":[{"node":{"id":"830c947e-a289-5690-a98a-cb96e720d72c","excerpt":"Rules of Hooks React Hook을 사용할 때 따라야 할 몇 가지 중요한 규칙 이 규칙들은 Hook이 일관되게 동작하도록 하기 위함이다. 최상위에서만 Hook 호출하기 Hook은 함수 컴포넌트의 최상위 수준에서만 호출해야 한다. 조건문, 반복문, 중첩된 함수 내에서 Hook 호출해서는 안됨. 이렇게 해야 동일한 순서로 호출되는 것을 보장 할 수 있다. React 함수 컴포넌트 또는 커스텀 Hook 안에서만 Hook 호출하기 일반 자바스크립트 함수나 클래스 컴포넌트에서 Hook을 호출하면 안됨.","fields":{"slug":"/react-rulesOfHooks/"},"frontmatter":{"categories":"React","title":"리액트 Rules of Hooks","date":"July 12, 2024"}},"next":{"fields":{"slug":"/next-env/"}},"previous":{"fields":{"slug":"/next-hydration/"}}},{"node":{"id":"0cf87a6d-7252-52df-8f36-dec1ac59f42e","excerpt":"Prop drilling vs Context API, How the data is passed Props Drilling props를 오로지 하위 컴포넌트로 전달하는 용도로만 쓰이는 컴포넌트들을 거치면서 React Component 트리의 한 부분에서 다른 부분으로 데이터를 전달하는 과정 여러 컴포넌트를 거쳐 prop 된다면 데이터 추적이 어려워 유지보수가 어려워지게 된다. context를 이용하면 단계마다 일일이 props를 넘겨주지 않고도 컴포넌트 트리 전체에 데이터를 제공할 수 있음 언제 context를 써야 할까 context는 트리 안에서 전역적이라고 볼 수 있는 데이터를 공유하도록 고안된 방법 ex : 현재 로그인한 유저 정보, 테마, 선호 언어 등 API React.createContext context 객체를 만듦 context 객체를 구독하고 있는 컴포넌트를 랜더링할 때 React는 트리 상위에서 가장 가까이 있는 짝이 맞는 Provider로부터 현재값을 읽음 Co…","fields":{"slug":"/react-contextApi/"},"frontmatter":{"categories":"React","title":"리액트 Context API","date":"July 10, 2024"}},"next":{"fields":{"slug":"/next-appRouter/"}},"previous":{"fields":{"slug":"/next-env/"}}},{"node":{"id":"b4e9f8e1-9d1e-5f1b-8273-822be12e3e16","excerpt":"리액트는 key가 동일 할 경우, 동일한 DOM Element를 보여줌 때문에 key를 index로 뒀을 때 문제가 생길 수 있다. 예시 line 22, 23: 추가, 삭제 버튼. 추가 버튼을 누르면 정국 데이터를 list 앞에 추가하고 삭제를 누르면 철수를 삭제한다. line 28: component가 관리하는 list 데이터를 map으로 loop 돌며 div 태그의 key를 index로 지정한다. 추가할 때 \r\n철수 input에 데이터를 입력 \r\n추가 버튼을 눌렀을 때 \r\n이러한 결과를 예상했지만 \r\n이러한 결과가 나온다. list 값이 변경되면서 index를 다시 mapping함 맨 앞에 추가된 정국은 key = 0 key가 동일 할 경우, 동일한 DOM Element 보여줌 삭제할 때 \r\n위 상황에서 삭제를 눌렀을 때 \r\n이러한 결과를 예상하지만 \r\n이러한 결과가 나온다. 삭제가 되면서 다시 mapping 영희가 철수의 index였던 0이 됨 철수 데이터가 영희에게 mapp…","fields":{"slug":"/react-mapKeyIndex/"},"frontmatter":{"categories":"React","title":"리액트 배열의 index로 key를 쓰면 안되는 이유","date":"July 03, 2024"}},"next":{"fields":{"slug":"/angular-form/"}},"previous":{"fields":{"slug":"/next-chatting/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}