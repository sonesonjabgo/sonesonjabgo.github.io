{"componentChunkName":"component---src-templates-blog-template-js","path":"/javascript-searchBar/","result":{"data":{"cur":{"id":"3f53c7ef-c3c4-52f8-99a4-895c496dc158","html":"<p>원티드 2024.08 프리온보딩 프론트엔드 사전 과제로 search bar 컴포넌트 구현이 나왔다.</p>\n<h2 id=\"결과\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC\" aria-label=\"결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h2>\n<p><img src=\"/b40999a6adb1eb6a426b8921cd1da24e/searchbar.gif\" alt=\"alt text\"></p>\n<h2 id=\"신경-썼던-것\" style=\"position:relative;\"><a href=\"#%EC%8B%A0%EA%B2%BD-%EC%8D%BC%EB%8D%98-%EA%B2%83\" aria-label=\"신경 썼던 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>신경 썼던 것</h2>\n<ul>\n<li>각각의 데이터의 타입으로 묶어서 보기 정렬</li>\n<li>input value에 따라 하이라이트 적용</li>\n<li>디바운싱 적용</li>\n</ul>\n<h3 id=\"각각의-데이터의-타입으로-묶어서-보기-정렬\" style=\"position:relative;\"><a href=\"#%EA%B0%81%EA%B0%81%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%ED%83%80%EC%9E%85%EC%9C%BC%EB%A1%9C-%EB%AC%B6%EC%96%B4%EC%84%9C-%EB%B3%B4%EA%B8%B0-%EC%A0%95%EB%A0%AC\" aria-label=\"각각의 데이터의 타입으로 묶어서 보기 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>각각의 데이터의 타입으로 묶어서 보기 정렬</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> groupedData <span class=\"token operator\">=</span> dummy<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>acc<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      acc<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    acc<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>groupedData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> typeHeader <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    typeHeader<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\r\n    typeHeader<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'typeHeader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    resultDiv<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>typeHeader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      p<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'resultparagraph'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      p<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      p<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">;</span>\r\n      resultDiv<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>getData 함수는 DOM 로드 시에 실행되도록 했다.</p>\n<ul>\n<li>데이터 예시 - { description: “(ORCL) Oracle Corp”, key: “Oracle Corp”, type: “COMPANY” },\r\n이런 형태인데 reduce를 사용하여 type 별로 데이터를 묶었다.\r\n객체 전부를 반복문을 통해 돌기 위해 Object.entries 사용하여 배열로 변경\r\nkey가 된 type이 헤더가 되고 value가 items로 만들어 id = result인 div에 넣음</li>\n</ul>\n<h3 id=\"input-value에-따라-하이라이트-적용\" style=\"position:relative;\"><a href=\"#input-value%EC%97%90-%EB%94%B0%EB%9D%BC-%ED%95%98%EC%9D%B4%EB%9D%BC%EC%9D%B4%ED%8A%B8-%EC%A0%81%EC%9A%A9\" aria-label=\"input value에 따라 하이라이트 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>input value에 따라 하이라이트 적용</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> paragraphs <span class=\"token operator\">=</span> resultDiv<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> paragraphs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> regex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> newText <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;span class=\"highlight\">$1&lt;/span>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      p<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> newText<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      p<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>정규 표현식을 사용하여 문자 대조 후 클래스 변경</p>\n<ul>\n<li>\n<p>const regex = new RegExp((${value}), “gi”);</p>\n<ul>\n<li>value를 대소문자 구분없이 정규 표현식으로 변환</li>\n</ul>\n</li>\n<li>\n<p>const newText = text.replace(regex, ’<span class=\"highlight\">$1</span>’);</p>\n<ul>\n<li>정규 표현식으로 바꾼 값과 일치한게 있다면 강조 효과 css 적용</li>\n<li>$1은 정규 표현식 첫 번째 그룹. 사용자가 입력한 문자열</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"디바운싱-적용\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B0%94%EC%9A%B4%EC%8B%B1-%EC%A0%81%EC%9A%A9\" aria-label=\"디바운싱 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디바운싱 적용</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">let</span> timeout<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    timeout <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// -----------------------------------------------------</span>\r\n\r\n<span class=\"token keyword\">const</span> debouncedHighlight <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">highlight</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 300ms 지연</span>\r\n\r\ninput<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  resultDiv<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">debouncedHighlight</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 highlight 함수와 debounce 함수를 합쳐서 같이 실행하게 하여\r\n모든 입력에 적용되어 과하게 요청을 보내지 않도록 했다.</p>\n<h2 id=\"개선사항\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%84%A0%EC%82%AC%ED%95%AD\" aria-label=\"개선사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개선사항</h2>\n<ul>\n<li>요구사항에서 데이터를 전부 출력하고 그 중 겹치는 것을 강조하도록 하게 했는데</li>\n<li>이 방식은 데이터가 많을 경우 좋지 않을 것 같다.</li>\n<li>입력한 value가 들어간 키워드만 나오도록 하는 게 성능적으로 더 나을 것 같다.</li>\n</ul>","excerpt":"원티드 2024.08 프리온보딩 프론트엔드 사전 과제로 search bar 컴포넌트 구현이 나왔다. 결과 alt text 신경 썼던 것 각각의 데이터의 타입으로 묶어서 보기 정렬 input value에 따라 하이라이트 적용 디바운싱 적용 각각의 데이터의 타입으로 묶어서 보기 정렬 getData 함수는 DOM 로드 시에 실행되도록 했다. 데이터 예시 - { description: “(ORCL) Oracle Corp”, key: “Oracle Corp”, type: “COMPANY” },\r\n이런 형태인데 reduce를 사용하여 type 별로 데이터를 묶었다.\r\n객체 전부를 반복문을 통해 돌기 위해 Object.entries 사용하여 배열로 변경\r\nkey가 된 type이 헤더가 되고 value가 items로 만들어 id = result인 div에 넣음 input value에 따라 하이라이트 적용 정규 표현식을 사용하여 문자 대조 후 클래스 변경 const regex = new RegEx…","frontmatter":{"date":"July 23, 2024","title":"javascript search bar component","categories":"javascript","author":"손재형","emoji":null},"fields":{"slug":"/javascript-searchBar/"}},"next":{"id":"eba44f21-7f31-5f3c-8cf5-e5716bc7a8c6","html":"<h2 id=\"다크모드-구현\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"다크모드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다크모드 구현</h2>\n<ul>\n<li>현재 개발 환경은 next 14에 tailwind를 사용하고 있다.</li>\n</ul>\n<h2 id=\"next-themes\" style=\"position:relative;\"><a href=\"#next-themes\" aria-label=\"next themes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>next-themes</h2>\n<ul>\n<li>\n<p><a href=\"https://github.com/pacocoursey/next-themes?tab=readme-ov-file###with-tailwind\">https://github.com/pacocoursey/next-themes?tab=readme-ov-file###with-tailwind</a></p>\n</li>\n<li>\n<p>이거 사용했다.</p>\n</li>\n<li>\n<p>전체를 감싸고 있는 RootLayout의 Provider에 ThemeProvider 추가</p>\n<ul>\n<li>next ui 사용하고 있어서 rootProvider를 따로 만들어서 rootLayout에 적용시켰다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- rootProvider.tsx --></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ThemeProvider</span> <span class=\"token attr-name\">attribute</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>class<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NextUIProvider</span><span class=\"token punctuation\">></span></span>{children}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NextUIProvider</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ThemeProvider</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>attribute=“class”를 추가해야 테일윈드 클래스 dark: 가 적용됨.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// tailwind.config.ts</span>\r\ndarkmode<span class=\"token operator\">:</span> <span class=\"token string\">'class'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>테일윈드 config 파일에 위 코드 추가해야 함.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token string\">'use client'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useTheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next-themes'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Darkmode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> theme<span class=\"token punctuation\">,</span> setTheme <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Light Mode<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Dark Mode<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>useTheme을 가져와서 다크모드 토글로 사용 할 수 있다.</li>\n</ul>","frontmatter":{"date":"July 17, 2024","title":"next.js 다크모드","categories":"Next","author":"손재형","emoji":null},"fields":{"slug":"/next-darkmode/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://sonesonjabgo.github.io","comments":{"utterances":{"repo":"sonesonjabgo/sonesonjabgo.github.io"}}}}},"pageContext":{"slug":"/javascript-searchBar/","nextSlug":"/next-darkmode/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}